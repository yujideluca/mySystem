* Ctrl-v = visual mode
** Shift-i
*** allows you to apply an insertion to all the lines selected in visual mode




























===============================================================================
=    W e l c o m e   t o   t h e   V I M   T u t o r    -    Version 1.5      =
===============================================================================

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
			       LESSON 1 SUMMARY


  1. The cursor is moved using either the arrow keys or the hjkl keys.
	 h (left)	j (down)       k (up)	    l (right)

  2. To enter Vim (from the % prompt) type:  vim FILENAME <ENTER>

  3. To exit Vim type:	   <ESC>   :q!	 <ENTER>  to trash all changes.
	     OR type:	   <ESC>   :wq	 <ENTER>  to save the changes.

  4. To delete a character under the cursor in Normal mode type:  x

  5. To insert text at the cursor while in Normal mode type:
	 i     type in text	<ESC>

NOTE: Pressing <ESC> will place you in Normal mode or will cancel
      an unwanted and partially completed command.

Now continue with Lesson 2.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
			       LESSON 2 SUMMARY


  1. To delete from the cursor to the end of a word type:    dw

  2. To delete from the cursor to the end of a line type:    d$

  3. To delete a whole line type:    dd

  4. The format for a command in Normal mode is:

       [number]   command   object     OR     command	[number]   object
     where:
       number - is how many times to repeat the command
       command - is what to do, such as  d  for delete
       object - is what the command should act upon, such as  w (word),
		$ (to the end of line), etc.

  5. To undo previous actions, type:	     u	 (lowercase u)
     To undo all the changes on a line type: U	 (capital U)
     To undo the undo's type:		     CTRL-R

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
			       LESSON 3 SUMMARY


  1. To replace text that has already been deleted, type   p .	This Puts the
     deleted text AFTER the cursor (if a line was deleted it will go on the
     line below the cursor).

  2. To replace the character under the cursor, type   r   and then the
     character which will replace the original.

  3. The change command allows you to change the specified object from the
     cursor to the end of the object.  eg. Type  cw  to change from the
     cursor to the end of the word, c$	to change to the end of a line.

  4. The format for change is:

	 [number]   c	object	      OR	c   [number]   object

Now go on to the next lesson.



~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
			       LESSON 4 SUMMARY


  1. Ctrl-g  displays your location in the file and the file status.
     Shift-G  moves to the end of the file.  A line number followed
     by  Shift-G  moves to that line number.

  2. Typing  /	followed by a phrase searches FORWARD for the phrase.
     Typing  ?	followed by a phrase searches BACKWARD for the phrase.
     After a search type  n  to find the next occurrence in the same direction
     or  Shift-N  to search in the opposite direction.

  3. Typing  %	while the cursor is on a  (,),[,],{, or }  locates its
     matching pair.

  4. To substitute new for the first old on a line type    :s/old/new
     To substitute new for all 'old's on a line type	   :s/old/new/g
     To substitute phrases between two line #'s type	   :#,#s/old/new/g
     To substitute all occurrences in the file type	   :%s/old/new/g
     To ask for confirmation each time add 'c'		   :%s/old/new/gc


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
			       LESSON 5 SUMMARY


  1.  :!command  executes an external command.

      Some useful examples are (MS-DOS):
	  :!dir			-  shows a directory listing.
	  :!del FILENAME	-  removes file FILENAME.

  2.  :w FILENAME  writes the current Vim file to disk with name FILENAME.

  3.  :#,#w FILENAME  saves the lines # through # in file FILENAME.

  4.  :r FILENAME  retrieves disk file FILENAME and inserts it into the
      current file following the cursor position.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
			       LESSON 6 SUMMARY


  1. Typing  o	opens a line BELOW the cursor and places the cursor on the open
     line in Insert mode.
     Typing a capital  O  opens the line ABOVE the line the cursor is on.

  2. Type an  a  to insert text AFTER the character the cursor is on.
     Typing a capital  A  automatically appends text to the end of the line.

  3. Typing a capital  R  enters Replace mode until  <ESC>  is pressed to exit.

  4. Typing ":set xxx" sets the option "xxx"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		       LESSON 7: ON-LINE HELP COMMANDS


		      ** Use the on-line help system **

  Vim has a comprehensive on-line help system.  To get started, try one of
  these three:
	- press the <HELP> key (if you have one)
	- press the <F1> key (if you have one)
	- type   :help <ENTER>

  Type   :q <ENTER>   to close the help window.

  You can find help on just about any subject, by giving an argument to the
  ":help" command.  Try these (don't forget pressing <ENTER>):

	:help w
	:help c_<T
	:help insert-index
	:help user-manual


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		       LESSON 8: CREATE A STARTUP SCRIPT

			  ** Switch on Vim features **

  Vim has many more features than Vi, but most of them are disabled by default.
  To start using more features you have to create a "vimrc" file.

  1. Start editing the "vimrc" file, this depends on your system:
	:edit ~/.vimrc			for Unix
	:edit $VIM/_vimrc		for MS-Windows

  2. Now read the example "vimrc" file text:

	:read $VIMRUNTIME/vimrc_example.vim

  3. Write the file with:

	:write

  The next time you start Vim it will use syntax highlighting.
  You can add all your preferred settings to this "vimrc" file.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  This concludes the Vim Tutor.  It was intended to give a brief overview of
  the Vim editor, just enough to allow you to use the editor fairly easily.
  It is far from complete as Vim has many many more commands.  Read the user
  manual next: ":help user-manual".

  For further reading and studying, this book is recommended:
	Vim - Vi Improved - by Steve Oualline
	Publisher: New Riders
  The first book completely dedicated to Vim.  Especially useful for beginners.
  There are many examples and pictures.
  See http://iccf-holland.org/click5.html

  This book is older and more about Vi than Vim, but also recommended:
	Learning the Vi Editor - by Linda Lamb
	Publisher: O'Reilly & Associates Inc.
  It is a good book to get to know almost anything you want to do with Vi.
  The sixth edition also includes information on Vim.

  This tutorial was written by Michael C. Pierce and Robert K. Ware,
  Colorado School of Mines using ideas supplied by Charles Smith,
  Colorado State University.  E-mail: bware@mines.colorado.edu.

  Modified for Vim by Bram Moolenaar.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
** :5,7m 21
   moves lines 5,6,7 after line 21

* Ctrl-b = page up (back)
* Ctrl-f = page down (forward)
* Ctrl-d = half page down (down)
* Ctrl-u = half page up (up)

* :m = move command
** number
*** moves the current line to the line you pointed +1
** $
*** moves to after the last line
** 'a
*** moves to after the mark a
** '}-1
*** moves to the end of the current paragraph
* <number> + gg or G (go to the line) 
* z + . (centers the page on the curent line
